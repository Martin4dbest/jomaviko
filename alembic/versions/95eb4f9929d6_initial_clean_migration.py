"""initial clean migration

Revision ID: 95eb4f9929d6
Revises: 
Create Date: 2025-07-01 07:32:33.904081

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '95eb4f9929d6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('receiver_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['receiver_id'], ['user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sender_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('donations')
    op.drop_table('pledges')
    op.alter_column('order', 'seller_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('order', 'status')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('order', sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.alter_column('order', 'seller_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_table('pledges',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pledged_amount', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('pledge_currency', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='pledges_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='pledges_pkey')
    )
    op.create_table('donations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('currency', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('donation_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('medal', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('payment_type', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('receipt_filename', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('amount_paid', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('pledged_amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('paid_status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('reference', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='donations_pkey'),
    sa.UniqueConstraint('reference', name='uq_donations_reference')
    )
    op.drop_table('message')
    # ### end Alembic commands ###
